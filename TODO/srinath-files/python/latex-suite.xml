<article>
  <articleinfo id="articleinfo">
		<title id="articleinfo-title">Latex-Suite -- Tools for LaTeX in Vim</title>
		<abstract>
			<para>
				Latex-Suite attempts to provide a comprehensive set of tools to
				view, edit and compile LaTeX documents in Vim. Together, they
				provide tools starting from macros to speed up editing LaTeX
				documents to functions for forward searching .dvi documents.
				Latex-suite has been possible because of the contributions of many
				people. Please see <tag>latex-suite-credits</tag> for a list of
				people who have helped.
			</para>
			<para>
				Latex-suite is released under the Vim charityware license. For
				license and conditions of use look at <tag>copyright</tag>. Replace
				all occurences of ``Vim'' with ``Latex-Suite''. The current
				copyright holders of Latex-Suite are Srinath Avadhanula and Mikolaj
				Machowski.
			</para>
			<para>
				Homepage: http://vim-latex.sourceforge.net
			</para>
			{Vi of course does not have any of this}
		</abstract>
	</articleinfo>
	<note>
		If you are viewing this in vim 6.0+, then the sections should appear
		folded (see <tag>folding</tag>). Use <tag>za</tag> to toggle back and
		forth between open and closed views.
	</note>
	<note>
		If the sections do not appear folded, press za in normal mode. This
		will fold up everything and it will be much easier to navigate.
	</note>
	<para></para>
	<anchor id="latex-suite-toc"></anchor>
	<?vimhelp maketoc?>
	<section>
		<title id="latex-suite-recommended">Recommended settings</title>
		<para>
			Latex-Suite works best if you have the following settings in your
			~/.vimrc:
		<programlisting>" this line is responsible for loading latex-suite when a .tex file is
" opened.
filetype plugin on
" for automatic indentation specific to LaTeX.
filetype indent on</programlisting>
		</para>
		<para>
			In addition, the following settings could go in your ~/.vim/ftplugin/tex.vim
			file:
		</para>
		<programlisting>" this is mostly a matter of taste. but LaTeX looks good with just a bit
" of indentation.
set sw=2
" TIP: if you write your \label's as \label{fig:something}, then if you
" type in \ref{fig: and press &lt;C-n&gt; you will automatically cycle through 
" all the figure labels. Very useful!
set iskeyword+=:
" IMPORTANT: If you are a win32 user, then the following setting is
" necessary in order to have latex called correctly from within vim.
set shellslash</programlisting>
	</section>
	<section>
		<title id="latex-suite-macros">Editing text</title>
		<para>
			Latex-Suite ships with a very comprehensive set of insert mode and visual mode
			mappings and menu items to typeset most of the LaTeX elements. 
		</para>
		<?vimhelp groupanchors?>
		<anchor id="placeholders"/>
		<anchor id="placeholder"/>
		<anchor id="place-holder"/>
		<anchor id="place-holders"/>
		<para>
			All these macros implement Stephen Riem's bracketing system and Gergely
			Kontra's JumpFunc() for handling place-holders. This consists of using
			"place-holders" to mark off locations where the next relevant editing has to
			be done. As an example, when the user types in "EFI" in insert mode, she will
			get the following:
		<programlisting>\begin{figure}[h]
    \centerline{\psfig{figure=&lt;+eps file+&gt;}}
    \caption{&lt;+caption text+&gt;}
    \label{fig:&lt;+label+&gt;}
\end{figure}&lt;++&gt;
		</programlisting>
		The text &lt;+eps file+&gt; will be selected and she will be left in
		<tag>select-mode</tag> so that she can continue typing straight away.
		After having typed in the file name, she can press Control-J (while
		still in insert-mode). This will take her directly to the next
		"place-holder". i.e, the &lt;+caption text+&gt; will be visually selected
		with vim in select mode again for typing in the caption. This saves on
		a lot of key presses.
		</para>
		<note>
			These mappings are are not standard mappings in the sense that only the
			last character is mapped. See plugin/imaps.vim for further documentation. For
			example, in the example above, you can press the characters 'E', 'F' and 'I'
			as slowly as you wish. The characters are visible as you type them and you can
			use the movement or backspace key to correct yourself unlike normal mappings.
		</note>
		<section>
			<title id="latex-suite-macros-1">Editing text Part I</title>
			This is an arbitrary section
		</section>
		<section>
			<title id="latex-suite-macros-2">Editing text Part II</title>
			This is an arbitrary section
		</section>
	</section>
</article>

<!--
vim: ts=2:sw=2
-->
