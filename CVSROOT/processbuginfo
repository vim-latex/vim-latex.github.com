#! /usr/bin/python

import sys, re, os, string, getopt, pwd
from time import time, localtime, strftime
from cStringIO import StringIO

username = pwd.getpwuid(os.getuid())[0]

commit = sys.stdin.read()

try:
	opts, args = getopt.getopt(
		sys.argv[1:], 'c:', [])
except:
	print 'Error in parsing input arguments'
	sys.exit(1)

# find out which ChangeLog file the user wants to save info to.
for opt, arg in opts:
	if opt == '-c':
		CLfname = arg

# If the ChangeLog specified cannot be read, then assume it hasn't been
# created yet...
try:
	clfp = open(CLfname, 'r')
	changeLogPrev = string.join(clfp.readlines(), '')
	print 'read in previous log messages'
	clfp.close()
except:
	changeLogPrev = ''

# exctract the files which changed with this commit.
# args is of the form
# path/to/module file1,r1,r2 file2,r1,r2
# basically, just snip off the leading path to the module.
file_header = string.join(string.split(args[0])[1:], ' ')

# extract all the lines which need to go into the log file.
islog = 0
s = ''
for line in string.split(commit, '\n'):
	if re.match('Bug:|Problem:|Feature:|New:', line):
		islog = 1
		s = s + strftime('%b-%d-%Y:\n', localtime(time())) + ('* %s (%s):' % (file_header, username)) + '\n'

	if re.match('^\s*$', line) is not None:
		islog = 0

	if islog:
		s = s + '\t' + line + '\n'

s = re.sub('\s*$', '\n\n', s)
s = s + changeLogPrev

print 'attempting to write new log message to [%s]' % CLfname
try:
	clfp = open(CLfname, 'w')
	clfp.write(s)
	clfp.close()
	print 'successfully wrote log file to [%s]' % CLfname
except:
	print 'problem opening log file for writing, trying to change permissions...'
	os.chown(CLfname, '664')

try:
	clfp = open(CLfname, 'w')
	clfp.write(s)
	clfp.close()
	print 'successfully wrote log file to [%s]' % CLfname
except:
	print 'changing permissions didn''help.. this is what I wanted to say...'
	print '---- Start ChangeLog ----'
	print s
